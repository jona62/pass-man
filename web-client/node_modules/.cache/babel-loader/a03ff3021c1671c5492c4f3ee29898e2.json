{"ast":null,"code":"// This service object was adapted from here:\n//  https://tylermcginnis.com/react-router-protected-routes-authentication/\n//\n// This version was modified to use real authentication implemented\n// in the backend api. It was also modified to return promises instead\n// of using callbacks `cb`.\nvar auth={isAuthenticated:false,emailAddress:\"\",authenticate:function authenticate(email,password){var _this=this;return fetch(\"/api/auth/login\",{method:\"POST\",body:JSON.stringify({email:email,password:password}),headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(!response.ok){console.log(\"Login Failed\");return;}return response.json();}).then(function(body){_this.isAuthenticated=true;_this.emailAddress=email;return body;});},signup:function signup(formData){var _this2=this;return fetch(\"/api/auth/signup\",{method:\"POST\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(formData)}).then(function(response){if(!response.ok){console.log(\"Registration Failed\");return;}return response.json();}).then(function(body){_this2.emailAddress=formData.email;_this2.isAuthenticated=true;return body;});},signout:function signout(cb){var _this3=this;return fetch(\"/api/auth/logout\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){if(!response.ok){throw new Error(\"Logout Failed\");}return response.json();}).then(function(body){_this3.isAuthenticated=false;return body;});}};export default auth;","map":{"version":3,"sources":["/Users/jonathanjames/Projects/pass-man/web-client/src/services/auth.js"],"names":["auth","isAuthenticated","emailAddress","authenticate","email","password","fetch","method","body","JSON","stringify","headers","then","response","ok","console","log","json","signup","formData","mode","signout","cb","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,GAAMA,CAAAA,IAAI,CAAG,CACXC,eAAe,CAAE,KADN,CAEXC,YAAY,CAAE,EAFH,CAGXC,YAHW,uBAGEC,KAHF,CAGSC,QAHT,CAGmB,gBAC5B,MAAOC,CAAAA,KAAK,CAAC,iBAAD,CAAoB,CAC9BC,MAAM,CAAE,MADsB,CAE9BC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEN,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAf,CAFwB,CAG9BM,OAAO,CAAE,CACP,eAAgB,kBADT,CAHqB,CAApB,CAAL,CAOJC,IAPI,CAOC,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CAChBC,OAAO,CAACC,GAAR,CAAY,cAAZ,EACA,OACD,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACD,CAbI,EAcJL,IAdI,CAcC,SAAAJ,IAAI,CAAI,CACZ,KAAI,CAACP,eAAL,CAAuB,IAAvB,CACA,KAAI,CAACC,YAAL,CAAoBE,KAApB,CACA,MAAOI,CAAAA,IAAP,CACD,CAlBI,CAAP,CAmBD,CAvBU,CAwBXU,MAxBW,iBAwBJC,QAxBI,CAwBM,iBACf,MAAOb,CAAAA,KAAK,CAAC,kBAAD,CAAqB,CAC/BC,MAAM,CAAE,MADuB,CAE/Ba,IAAI,CAAE,MAFyB,CAG/BT,OAAO,CAAE,CACP,eAAgB,kBADT,CAHsB,CAM/BH,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeS,QAAf,CANyB,CAArB,CAAL,CAQJP,IARI,CAQC,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CAChBC,OAAO,CAACC,GAAR,CAAY,qBAAZ,EACA,OACD,CACD,MAAOH,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACD,CAdI,EAeJL,IAfI,CAeC,SAAAJ,IAAI,CAAI,CACZ,MAAI,CAACN,YAAL,CAAoBiB,QAAQ,CAACf,KAA7B,CACA,MAAI,CAACH,eAAL,CAAuB,IAAvB,CACA,MAAOO,CAAAA,IAAP,CACD,CAnBI,CAAP,CAoBD,CA7CU,CA8CXa,OA9CW,kBA8CHC,EA9CG,CA8CC,iBACV,MAAOhB,CAAAA,KAAK,CAAC,kBAAD,CAAqB,CAC/BC,MAAM,CAAE,MADuB,CAE/BI,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAArB,CAAL,CAMJC,IANI,CAMC,SAAAC,QAAQ,CAAI,CAChB,GAAI,CAACA,QAAQ,CAACC,EAAd,CAAkB,CAChB,KAAM,IAAIS,CAAAA,KAAJ,CAAU,eAAV,CAAN,CACD,CAED,MAAOV,CAAAA,QAAQ,CAACI,IAAT,EAAP,CACD,CAZI,EAaJL,IAbI,CAaC,SAAAJ,IAAI,CAAI,CACZ,MAAI,CAACP,eAAL,CAAuB,KAAvB,CACA,MAAOO,CAAAA,IAAP,CACD,CAhBI,CAAP,CAiBD,CAhEU,CAAb,CAmEA,cAAeR,CAAAA,IAAf","sourcesContent":["// This service object was adapted from here:\n//  https://tylermcginnis.com/react-router-protected-routes-authentication/\n//\n// This version was modified to use real authentication implemented\n// in the backend api. It was also modified to return promises instead\n// of using callbacks `cb`.\n\nconst auth = {\n  isAuthenticated: false,\n  emailAddress: \"\",\n  authenticate(email, password) {\n    return fetch(\"/api/auth/login\", {\n      method: \"POST\",\n      body: JSON.stringify({ email, password }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          console.log(\"Login Failed\");\n          return;\n        }\n        return response.json();\n      })\n      .then(body => {\n        this.isAuthenticated = true;\n        this.emailAddress = email;\n        return body;\n      });\n  },\n  signup(formData) {\n    return fetch(\"/api/auth/signup\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    })\n      .then(response => {\n        if (!response.ok) {\n          console.log(\"Registration Failed\");\n          return;\n        }\n        return response.json();\n      })\n      .then(body => {\n        this.emailAddress = formData.email;\n        this.isAuthenticated = true;\n        return body;\n      });\n  },\n  signout(cb) {\n    return fetch(\"/api/auth/logout\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(\"Logout Failed\");\n        }\n\n        return response.json();\n      })\n      .then(body => {\n        this.isAuthenticated = false;\n        return body;\n      });\n  }\n};\n\nexport default auth;\n"]},"metadata":{},"sourceType":"module"}