{"ast":null,"code":"import _objectSpread from\"/Users/jonathanjames/Projects/pass-man/web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/jonathanjames/Projects/pass-man/web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/jonathanjames/Projects/pass-man/web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/jonathanjames/Projects/pass-man/web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/jonathanjames/Projects/pass-man/web-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";/* eslint-disable react-hooks/rules-of-hooks */import React from\"react\";import\"./loginPage.css\";import TextInput from\"../common/textInput\";import validate from\"../common/validate\";import auth from\"../services/auth.js\";import{Link,Redirect}from\"react-router-dom\";var LoginPage=/*#__PURE__*/function(_React$Component){_inherits(LoginPage,_React$Component);var _super=_createSuper(LoginPage);function LoginPage(){var _this;_classCallCheck(this,LoginPage);_this=_super.call(this);_this.changeHandler=function(event){var name=event.target.name;var value=event.target.value;var updatedControls=_objectSpread({},_this.state.formControls);var updatedFormElement=_objectSpread({},updatedControls[name]);updatedFormElement.value=value;updatedFormElement.touched=true;updatedFormElement.valid=validate(value,updatedFormElement.validationRules);updatedControls[name]=updatedFormElement;var formIsValid=true;for(var inputIdentifier in updatedControls){formIsValid=updatedControls[inputIdentifier].valid&&formIsValid;}_this.setState({formControls:updatedControls,formIsValid:formIsValid});};_this.formSubmitHandler=function(e){e.preventDefault();var formData={};for(var formElementId in _this.state.formControls){formData[formElementId]=_this.state.formControls[formElementId].value;}var email=formData.email,password=formData.password;auth.authenticate(email,password).then(function(user){_this.setState({isAuthenticated:true});});};_this.state={isAuthenticated:false,userId:null,formIsValid:false,//we will use this to track the overall form validity\nformControls:{email:{value:\"\",placeholder:\"Email\",valid:false,touched:false,validationRules:{isEmail:true}},password:{value:\"\",placeholder:\"Password\",valid:false,touched:false,validationRules:{isPassword:true}}}};return _this;}_createClass(LoginPage,[{key:\"render\",value:function render(){if(this.state.isAuthenticated){var _ref=this.props.history.location.state.from||\"/home\",pathname=_ref.pathname;return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:pathname}});}return/*#__PURE__*/React.createElement(\"div\",{className:\"Container\",style:{width:\"120vw\",height:\"120vh\",position:\"fixed\",top:\"-20vh\",left:\"-10vw\",zIndex:-1}},/*#__PURE__*/React.createElement(\"div\",{className:\"logcard\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Login\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.formSubmitHandler},/*#__PURE__*/React.createElement(TextInput,{name:\"email\",type:\"email\",placeholder:this.state.formControls.email.placeholder,value:this.state.formControls.email.value,onChange:this.changeHandler,touched:this.state.formControls.email.touched,valid:this.state.formControls.email.value}),/*#__PURE__*/React.createElement(TextInput,{name:\"password\",type:\"password\",placeholder:this.state.formControls.password.placeholder,value:this.state.formControls.password.value,onChange:this.changeHandler,touched:this.state.formControls.password.touched,valid:this.state.formControls.password.value}),/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",name:\"login\",disabled:!this.state.formIsValid})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Not a member?\",/*#__PURE__*/React.createElement(Link,{className:\"nav-link\",exact:true,to:\"/signup\"},\"signup\")))));}}]);return LoginPage;}(React.Component);export default LoginPage;","map":{"version":3,"sources":["/Users/jonathanjames/Projects/pass-man/web-client/src/pages/loginPage.js"],"names":["React","TextInput","validate","auth","Link","Redirect","LoginPage","changeHandler","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","inputIdentifier","setState","formSubmitHandler","e","preventDefault","formData","formElementId","email","password","authenticate","then","user","isAuthenticated","userId","placeholder","isEmail","isPassword","props","history","location","from","pathname","width","height","position","top","left","zIndex","Component"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport \"./loginPage.css\";\nimport TextInput from \"../common/textInput\";\nimport validate from \"../common/validate\";\nimport auth from \"../services/auth.js\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass LoginPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isAuthenticated: false,\n      userId: null,\n      formIsValid: false, //we will use this to track the overall form validity\n      formControls: {\n        email: {\n          value: \"\",\n          placeholder: \"Email\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isEmail: true\n          }\n        },\n        password: {\n          value: \"\",\n          placeholder: \"Password\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isPassword: true\n          }\n        }\n      }\n    };\n  }\n\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    const updatedControls = {\n      ...this.state.formControls\n    };\n    const updatedFormElement = {\n      ...updatedControls[name]\n    };\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    updatedControls[name] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedControls) {\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      formIsValid: formIsValid\n    });\n  };\n\n  formSubmitHandler = e => {\n    e.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.formControls) {\n      formData[formElementId] = this.state.formControls[formElementId].value;\n    }\n    const { email, password } = formData;\n    auth.authenticate(email, password).then(user => {\n      this.setState({\n        isAuthenticated: true\n      });\n    });\n  };\n\n  render() {\n    if (this.state.isAuthenticated) {\n      const { pathname } = this.props.history.location.state.from || \"/home\";\n      return (\n        <Redirect\n          to={{\n            pathname: pathname\n          }}\n        />\n      );\n    }\n\n    return (\n      <div\n        className=\"Container\"\n        style={{\n          width: \"120vw\",\n          height: \"120vh\",\n          position: \"fixed\",\n          top: \"-20vh\",\n          left: \"-10vw\",\n          zIndex: -1\n        }}\n      >\n        <div className=\"logcard\">\n          <h1>Login</h1>\n          <form onSubmit={this.formSubmitHandler}>\n            <TextInput\n              name=\"email\"\n              type={\"email\"}\n              placeholder={this.state.formControls.email.placeholder}\n              value={this.state.formControls.email.value}\n              onChange={this.changeHandler}\n              touched={this.state.formControls.email.touched}\n              valid={this.state.formControls.email.value}\n            />\n            <TextInput\n              name=\"password\"\n              type={\"password\"}\n              placeholder={this.state.formControls.password.placeholder}\n              value={this.state.formControls.password.value}\n              onChange={this.changeHandler}\n              touched={this.state.formControls.password.touched}\n              valid={this.state.formControls.password.value}\n            />\n\n            <input\n              type=\"submit\"\n              name=\"login\"\n              disabled={!this.state.formIsValid}\n            />\n          </form>\n          <div>\n            <p>\n              Not a member?\n              <Link className=\"nav-link\" exact to=\"/signup\">\n                signup\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}