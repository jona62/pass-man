{"ast":null,"code":"var validate=function validate(value,rules){var isValid=true;for(var rule in rules){switch(rule){case\"minLength\":isValid=isValid&&minLengthValidator(value,rules[rule]);break;case\"isRequired\":isValid=isValid&&requiredValidator(value);break;case\"isEmail\":isValid=isValid&&emailValidator(value);break;case\"isPassword\":isValid=isValid&&passwordValidator(value);break;default:isValid=true;}}return isValid;};var minLengthValidator=function minLengthValidator(value,minLength){return value.length>=minLength;};var requiredValidator=function requiredValidator(value){return value.trim()!==\"\";};var emailValidator=function emailValidator(value){var re=/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;return re.test(String(value).toLowerCase());};var passwordValidator=function passwordValidator(value){return value.length>=8&&value.length<=32;};export default validate;","map":{"version":3,"sources":["/Users/jonathanjames/Projects/pass-man/web-client/src/common/validate.js"],"names":["validate","value","rules","isValid","rule","minLengthValidator","requiredValidator","emailValidator","passwordValidator","minLength","length","trim","re","test","String","toLowerCase"],"mappings":"AAAA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAQC,KAAR,CAAkB,CACjC,GAAIC,CAAAA,OAAO,CAAG,IAAd,CAEA,IAAK,GAAIC,CAAAA,IAAT,GAAiBF,CAAAA,KAAjB,CAAwB,CACtB,OAAQE,IAAR,EACE,IAAK,WAAL,CACED,OAAO,CAAGA,OAAO,EAAIE,kBAAkB,CAACJ,KAAD,CAAQC,KAAK,CAACE,IAAD,CAAb,CAAvC,CACA,MACF,IAAK,YAAL,CACED,OAAO,CAAGA,OAAO,EAAIG,iBAAiB,CAACL,KAAD,CAAtC,CACA,MACF,IAAK,SAAL,CACEE,OAAO,CAAGA,OAAO,EAAII,cAAc,CAACN,KAAD,CAAnC,CACA,MACF,IAAK,YAAL,CACEE,OAAO,CAAGA,OAAO,EAAIK,iBAAiB,CAACP,KAAD,CAAtC,CACA,MACF,QACEE,OAAO,CAAG,IAAV,CAdJ,CAgBD,CACD,MAAOA,CAAAA,OAAP,CACD,CAtBD,CAwBA,GAAME,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACJ,KAAD,CAAQQ,SAAR,QAAsBR,CAAAA,KAAK,CAACS,MAAN,EAAgBD,SAAtC,EAA3B,CACA,GAAMH,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAL,KAAK,QAAIA,CAAAA,KAAK,CAACU,IAAN,KAAiB,EAArB,EAA/B,CACA,GAAMJ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAN,KAAK,CAAI,CAC9B,GAAMW,CAAAA,EAAE,CAAG,sIAAX,CACA,MAAOA,CAAAA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACb,KAAD,CAAN,CAAcc,WAAd,EAAR,CAAP,CACD,CAHD,CAIA,GAAMP,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAP,KAAK,QAAIA,CAAAA,KAAK,CAACS,MAAN,EAAgB,CAAhB,EAAqBT,KAAK,CAACS,MAAN,EAAgB,EAAzC,EAA/B,CAEA,cAAeV,CAAAA,QAAf","sourcesContent":["const validate = (value, rules) => {\n  let isValid = true;\n\n  for (let rule in rules) {\n    switch (rule) {\n      case \"minLength\":\n        isValid = isValid && minLengthValidator(value, rules[rule]);\n        break;\n      case \"isRequired\":\n        isValid = isValid && requiredValidator(value);\n        break;\n      case \"isEmail\":\n        isValid = isValid && emailValidator(value);\n        break;\n      case \"isPassword\":\n        isValid = isValid && passwordValidator(value);\n        break;\n      default:\n        isValid = true;\n    }\n  }\n  return isValid;\n};\n\nconst minLengthValidator = (value, minLength) => value.length >= minLength;\nconst requiredValidator = value => value.trim() !== \"\";\nconst emailValidator = value => {\n  const re = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n  return re.test(String(value).toLowerCase());\n};\nconst passwordValidator = value => value.length >= 8 && value.length <= 32;\n\nexport default validate;\n"]},"metadata":{},"sourceType":"module"}