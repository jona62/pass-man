{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanjames/Projects/pass-man/web-client/src/pages/loginPage.js\";\n\n/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport \"./loginPage.css\";\nimport TextInput from \"../common/textInput\";\nimport validate from \"../common/validate\";\nimport auth from \"../services/auth.js\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass LoginPage extends React.Component {\n  constructor() {\n    super();\n\n    this.changeHandler = event => {\n      const name = event.target.name;\n      const value = event.target.value;\n      const updatedControls = { ...this.state.formControls\n      };\n      const updatedFormElement = { ...updatedControls[name]\n      };\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      let formIsValid = true;\n\n      for (let inputIdentifier in updatedControls) {\n        formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n      }\n\n      this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    this.formSubmitHandler = e => {\n      e.preventDefault();\n      const formData = {};\n\n      for (let formElementId in this.state.formControls) {\n        formData[formElementId] = this.state.formControls[formElementId].value;\n      }\n\n      const {\n        email,\n        password\n      } = formData;\n      auth.authenticate(email, password).then(user => {\n        this.setState({\n          isAuthenticated: true\n        });\n      });\n    };\n\n    this.state = {\n      isAuthenticated: false,\n      userId: null,\n      formIsValid: false,\n      //we will use this to track the overall form validity\n      formControls: {\n        email: {\n          value: \"\",\n          placeholder: \"Email\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isEmail: true\n          }\n        },\n        password: {\n          value: \"\",\n          placeholder: \"Password\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isPassword: true\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    if (this.state.isAuthenticated) {\n      const {\n        pathname\n      } = this.props.history.location.state.from || \"/home\";\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: {\n          pathname: pathname\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Container\",\n      style: {\n        width: \"120vw\",\n        height: \"120vh\",\n        position: \"fixed\",\n        top: \"-20vh\",\n        left: \"-10vw\",\n        zIndex: -1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"logcard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.formSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextInput, {\n      name: \"email\",\n      type: \"email\",\n      placeholder: this.state.formControls.email.placeholder,\n      value: this.state.formControls.email.value,\n      onChange: this.changeHandler,\n      touched: this.state.formControls.email.touched,\n      valid: this.state.formControls.email.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextInput, {\n      name: \"password\",\n      type: \"password\",\n      placeholder: this.state.formControls.password.placeholder,\n      value: this.state.formControls.password.value,\n      onChange: this.changeHandler,\n      touched: this.state.formControls.password.touched,\n      valid: this.state.formControls.password.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"login\",\n      disabled: !this.state.formIsValid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, \"Not a member?\", /*#__PURE__*/React.createElement(Link, {\n      className: \"nav-link\",\n      exact: true,\n      to: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"signup\")))));\n  }\n\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/jonathanjames/Projects/pass-man/web-client/src/pages/loginPage.js"],"names":["React","TextInput","validate","auth","Link","Redirect","LoginPage","Component","constructor","changeHandler","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","inputIdentifier","setState","formSubmitHandler","e","preventDefault","formData","formElementId","email","password","authenticate","then","user","isAuthenticated","userId","placeholder","isEmail","isPassword","render","pathname","props","history","location","from","width","height","position","top","left","zIndex"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\nimport React from \"react\";\nimport \"./loginPage.css\";\nimport TextInput from \"../common/textInput\";\nimport validate from \"../common/validate\";\nimport auth from \"../services/auth.js\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass LoginPage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isAuthenticated: false,\n      userId: null,\n      formIsValid: false, //we will use this to track the overall form validity\n      formControls: {\n        email: {\n          value: \"\",\n          placeholder: \"Email\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isEmail: true\n          }\n        },\n        password: {\n          value: \"\",\n          placeholder: \"Password\",\n          valid: false,\n          touched: false,\n          validationRules: {\n            isPassword: true\n          }\n        }\n      }\n    };\n  }\n\n  changeHandler = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    const updatedControls = {\n      ...this.state.formControls\n    };\n    const updatedFormElement = {\n      ...updatedControls[name]\n    };\n    updatedFormElement.value = value;\n    updatedFormElement.touched = true;\n    updatedFormElement.valid = validate(\n      value,\n      updatedFormElement.validationRules\n    );\n\n    updatedControls[name] = updatedFormElement;\n\n    let formIsValid = true;\n    for (let inputIdentifier in updatedControls) {\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n    }\n\n    this.setState({\n      formControls: updatedControls,\n      formIsValid: formIsValid\n    });\n  };\n\n  formSubmitHandler = e => {\n    e.preventDefault();\n    const formData = {};\n    for (let formElementId in this.state.formControls) {\n      formData[formElementId] = this.state.formControls[formElementId].value;\n    }\n    const { email, password } = formData;\n    auth.authenticate(email, password).then(user => {\n      this.setState({\n        isAuthenticated: true\n      });\n    });\n  };\n\n  render() {\n    if (this.state.isAuthenticated) {\n      const { pathname } = this.props.history.location.state.from || \"/home\";\n      return (\n        <Redirect\n          to={{\n            pathname: pathname\n          }}\n        />\n      );\n    }\n\n    return (\n      <div\n        className=\"Container\"\n        style={{\n          width: \"120vw\",\n          height: \"120vh\",\n          position: \"fixed\",\n          top: \"-20vh\",\n          left: \"-10vw\",\n          zIndex: -1\n        }}\n      >\n        <div className=\"logcard\">\n          <h1>Login</h1>\n          <form onSubmit={this.formSubmitHandler}>\n            <TextInput\n              name=\"email\"\n              type={\"email\"}\n              placeholder={this.state.formControls.email.placeholder}\n              value={this.state.formControls.email.value}\n              onChange={this.changeHandler}\n              touched={this.state.formControls.email.touched}\n              valid={this.state.formControls.email.value}\n            />\n            <TextInput\n              name=\"password\"\n              type={\"password\"}\n              placeholder={this.state.formControls.password.placeholder}\n              value={this.state.formControls.password.value}\n              onChange={this.changeHandler}\n              touched={this.state.formControls.password.touched}\n              valid={this.state.formControls.password.value}\n            />\n\n            <input\n              type=\"submit\"\n              name=\"login\"\n              disabled={!this.state.formIsValid}\n            />\n          </form>\n          <div>\n            <p>\n              Not a member?\n              <Link className=\"nav-link\" exact to=\"/signup\">\n                signup\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}